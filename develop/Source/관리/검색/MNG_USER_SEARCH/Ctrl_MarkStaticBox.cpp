// Ctrl_MarkStaticBox.cpp : implementation file
//

#include "stdafx.h"
#include "Ctrl_MarkStaticBox.h"

#ifdef _DEBUG
#define new DEBUG_NEW
#undef THIS_FILE
static char THIS_FILE[] = __FILE__;
#endif

/////////////////////////////////////////////////////////////////////////////
// CCtrl_MarkStaticBox

CCtrl_MarkStaticBox::CCtrl_MarkStaticBox()
{
	m_crBoxBKColor   = RGB(0xFF,0xFF,0xFF);
	m_crBoxFontColor = RGB(0x00,0x00,0x00);

	/*
	/// create bitmap
	BYTE byte[196] = {
		0xC0, 0xA0, 0x18, 0x45,		// 1
		0xC0, 0xA0, 0x18, 0x45,		// 2
		0xC0, 0xA0, 0x18, 0x45,		// 3
		0xC0, 0xA0, 0x18, 0x45,		// 4
		0xC0, 0xA0, 0x18, 0x45,		// 5
		0xC0, 0xA0, 0x18, 0x45,		// 6
		0xC0, 0xA0, 0x18, 0x45,		// 7
		0xC0, 0xA0, 0x18, 0x45,		// 8
		0xC0, 0xA0, 0x18, 0x45,		// 9
		0xFF, 0xFF, 0xFF, 0xFF,		// 10
		0xC0, 0xA0, 0x18, 0x45,		// 11
		0xC0, 0xA0, 0x18, 0x45,		// 12
		0xC0, 0xA0, 0x18, 0x45,		// 13
		0xC0, 0xA0, 0x18, 0x45,		// 14
		0xC0, 0xA0, 0x18, 0x45,		// 15
		0xC0, 0xA0, 0x18, 0x45,		// 16
		0xC0, 0xA0, 0x18, 0x45,		// 17
		0xFF, 0xFF, 0xFF, 0xFF,		// 18
		0xC0, 0xA0, 0x18, 0x45,		// 19
		0xC0, 0xA0, 0x18, 0x45,		// 20
		0xC0, 0xA0, 0x18, 0x45,		// 21
		0xC0, 0xA0, 0x18, 0x45,		// 22
		0xC0, 0xA0, 0x18, 0x45,		// 23
		0xC0, 0xA0, 0x18, 0x45,		// 24
		0xC0, 0xA0, 0x18, 0x45,		// 25
		0xFF, 0xFF, 0xFF, 0xFF,		// 26
		0xC0, 0xA0, 0x18, 0x45,		// 27
		0xC0, 0xA0, 0x18, 0x45,		// 28
		0xC0, 0xA0, 0x18, 0x45,		// 29
		0xC0, 0xA0, 0x18, 0x45,		// 30
		0xC0, 0xA0, 0x18, 0x45,		// 31
		0xFF, 0xFF, 0xFF, 0xFF,		// 32
		0xC0, 0xA0, 0x18, 0x45,		// 33
		0xC0, 0xA0, 0x18, 0x45,		// 34
		0xC0, 0xA0, 0x18, 0x45,		// 35
		0xC0, 0xA0, 0x18, 0x45,		// 36
		0xC0, 0xA0, 0x18, 0x45,		// 37
		0xFF, 0xFF, 0xFF, 0xFF,		// 38
		0xC0, 0xA0, 0x18, 0x45,		// 39
		0xC0, 0xA0, 0x18, 0x45,		// 40
		0xC0, 0xA0, 0x18, 0x45,		// 41
		0xC0, 0xA0, 0x18, 0x45,		// 42
		0xC0, 0xA0, 0x18, 0x45,		// 43
		0xC0, 0xA0, 0x18, 0x45,		// 44
		0xC0, 0xA0, 0x18, 0x45,		// 45
		0xC0, 0xA0, 0x18, 0x45,		// 46
		0xC0, 0xA0, 0x18, 0x45,		// 47
		0xC0, 0xA0, 0x18, 0x45,		// 48
		0xC0, 0xA0, 0x18, 0x45,		// 49
	};

	m_Bitmap.CreateBitmap(7, 7, 1, 32, &byte);
	*/

	m_Bitmap.LoadBitmap(IDB_ITEMMARK);

	BITMAP bitmap;
	m_Bitmap.GetBitmap(&bitmap);

	m_nBitmapHeight = bitmap.bmHeight;
	m_nBitmapWidth  = bitmap.bmWidth;

	m_nInterval = 15;
	
	m_Font.CreateFont(12, 6, 0, 0, FW_NORMAL, FALSE, FALSE, 0, ANSI_CHARSET, OUT_DEFAULT_PRECIS,
					CLIP_DEFAULT_PRECIS, DEFAULT_QUALITY, DEFAULT_PITCH, _T("±¼¸²Ã¼"));
}

CCtrl_MarkStaticBox::~CCtrl_MarkStaticBox()
{
	m_Font.DeleteObject();
}


BEGIN_MESSAGE_MAP(CCtrl_MarkStaticBox, CStatic)
	//{{AFX_MSG_MAP(CCtrl_MarkStaticBox)
	ON_WM_PAINT()
	//}}AFX_MSG_MAP
END_MESSAGE_MAP()

/////////////////////////////////////////////////////////////////////////////
// CCtrl_MarkStaticBox message handlers

void CCtrl_MarkStaticBox::OnPaint() 
{
	CPaintDC dc(this);

	/// Draw Static Box
	OnDrawBox();

	/// Draw Item Mark
	OnDrawMark();

	/// Draw Text
	OnDrawText();
}

VOID CCtrl_MarkStaticBox::OnDrawBox()
{
	CClientDC dc(this);

	dc.SetBkColor(m_crBoxBKColor);
}

VOID CCtrl_MarkStaticBox::OnDrawMark()
{
	CClientDC dc(this);

	CRect rc;
	GetClientRect(rc);

	CDC MemDC;
	MemDC.CreateCompatibleDC(&dc);

	CBitmap* pOldBitmap = (CBitmap*)MemDC.SelectObject(&m_Bitmap);
	
	dc.BitBlt(0, ((rc.Height()-m_nBitmapHeight)/2), m_nBitmapWidth, m_nBitmapHeight, &MemDC, 0, 0, SRCCOPY);

	MemDC.SelectObject(pOldBitmap);
}

VOID CCtrl_MarkStaticBox::OnDrawText()
{
	CClientDC dc(this);

	CRect rc;
	GetClientRect(rc);

	CString strText;
	GetWindowText(strText);
	
	CFont* pOldFont = dc.SelectObject(&m_Font);

	dc.SetBkMode(TRANSPARENT);
	dc.SetTextColor(m_crBoxFontColor);

	rc.left += m_nInterval;
	dc.DrawText(strText, rc, DT_VCENTER | DT_END_ELLIPSIS);

	dc.SelectObject(pOldFont);
}